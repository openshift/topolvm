//*
// LVMd manages logical volumes of an LVM volume group.
//
// The protocol consists of two services:
// - VGService provides information of the volume group.
// - LVService provides management functions for logical volumes on the volume group.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v6.32.0
// source: pkg/lvmd/proto/lvmd.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Empty struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Empty) Reset() {
	*x = Empty{}
	mi := &file_pkg_lvmd_proto_lvmd_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_lvmd_proto_lvmd_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_pkg_lvmd_proto_lvmd_proto_rawDescGZIP(), []int{0}
}

// Represents a logical volume.
type LogicalVolume struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                             // The logical volume name.
	DevMajor      uint32                 `protobuf:"varint,3,opt,name=dev_major,json=devMajor,proto3" json:"dev_major,omitempty"`    // Device major number.
	DevMinor      uint32                 `protobuf:"varint,4,opt,name=dev_minor,json=devMinor,proto3" json:"dev_minor,omitempty"`    // Device minor number.
	Tags          []string               `protobuf:"bytes,5,rep,name=tags,proto3" json:"tags,omitempty"`                             // Tags to add to the volume during creation
	SizeBytes     int64                  `protobuf:"varint,6,opt,name=size_bytes,json=sizeBytes,proto3" json:"size_bytes,omitempty"` // Volume size in canonical CSI bytes.
	Path          string                 `protobuf:"bytes,7,opt,name=path,proto3" json:"path,omitempty"`                             // Path to the lv as per lvm.
	Attr          string                 `protobuf:"bytes,8,opt,name=attr,proto3" json:"attr,omitempty"`                             // Attributes of the lv.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogicalVolume) Reset() {
	*x = LogicalVolume{}
	mi := &file_pkg_lvmd_proto_lvmd_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogicalVolume) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogicalVolume) ProtoMessage() {}

func (x *LogicalVolume) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_lvmd_proto_lvmd_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogicalVolume.ProtoReflect.Descriptor instead.
func (*LogicalVolume) Descriptor() ([]byte, []int) {
	return file_pkg_lvmd_proto_lvmd_proto_rawDescGZIP(), []int{1}
}

func (x *LogicalVolume) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *LogicalVolume) GetDevMajor() uint32 {
	if x != nil {
		return x.DevMajor
	}
	return 0
}

func (x *LogicalVolume) GetDevMinor() uint32 {
	if x != nil {
		return x.DevMinor
	}
	return 0
}

func (x *LogicalVolume) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *LogicalVolume) GetSizeBytes() int64 {
	if x != nil {
		return x.SizeBytes
	}
	return 0
}

func (x *LogicalVolume) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *LogicalVolume) GetAttr() string {
	if x != nil {
		return x.Attr
	}
	return ""
}

// Represents the input for CreateLV.
type CreateLVRequest struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	Name                string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"` // The logical volume name.
	Tags                []string               `protobuf:"bytes,3,rep,name=tags,proto3" json:"tags,omitempty"` // Tags to add to the volume during creation
	DeviceClass         string                 `protobuf:"bytes,4,opt,name=device_class,json=deviceClass,proto3" json:"device_class,omitempty"`
	LvcreateOptionClass string                 `protobuf:"bytes,5,opt,name=lvcreate_option_class,json=lvcreateOptionClass,proto3" json:"lvcreate_option_class,omitempty"`
	SizeBytes           int64                  `protobuf:"varint,6,opt,name=size_bytes,json=sizeBytes,proto3" json:"size_bytes,omitempty"` // Volume size in canonical CSI bytes.
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *CreateLVRequest) Reset() {
	*x = CreateLVRequest{}
	mi := &file_pkg_lvmd_proto_lvmd_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateLVRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLVRequest) ProtoMessage() {}

func (x *CreateLVRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_lvmd_proto_lvmd_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLVRequest.ProtoReflect.Descriptor instead.
func (*CreateLVRequest) Descriptor() ([]byte, []int) {
	return file_pkg_lvmd_proto_lvmd_proto_rawDescGZIP(), []int{2}
}

func (x *CreateLVRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateLVRequest) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *CreateLVRequest) GetDeviceClass() string {
	if x != nil {
		return x.DeviceClass
	}
	return ""
}

func (x *CreateLVRequest) GetLvcreateOptionClass() string {
	if x != nil {
		return x.LvcreateOptionClass
	}
	return ""
}

func (x *CreateLVRequest) GetSizeBytes() int64 {
	if x != nil {
		return x.SizeBytes
	}
	return 0
}

// Represents the response of CreateLV.
type CreateLVResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Volume        *LogicalVolume         `protobuf:"bytes,1,opt,name=volume,proto3" json:"volume,omitempty"` // Information of the created volume.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateLVResponse) Reset() {
	*x = CreateLVResponse{}
	mi := &file_pkg_lvmd_proto_lvmd_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateLVResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLVResponse) ProtoMessage() {}

func (x *CreateLVResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_lvmd_proto_lvmd_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLVResponse.ProtoReflect.Descriptor instead.
func (*CreateLVResponse) Descriptor() ([]byte, []int) {
	return file_pkg_lvmd_proto_lvmd_proto_rawDescGZIP(), []int{3}
}

func (x *CreateLVResponse) GetVolume() *LogicalVolume {
	if x != nil {
		return x.Volume
	}
	return nil
}

// Represents the input for RemoveLV.
type RemoveLVRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"` // The logical volume name.
	DeviceClass   string                 `protobuf:"bytes,2,opt,name=device_class,json=deviceClass,proto3" json:"device_class,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveLVRequest) Reset() {
	*x = RemoveLVRequest{}
	mi := &file_pkg_lvmd_proto_lvmd_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveLVRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveLVRequest) ProtoMessage() {}

func (x *RemoveLVRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_lvmd_proto_lvmd_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveLVRequest.ProtoReflect.Descriptor instead.
func (*RemoveLVRequest) Descriptor() ([]byte, []int) {
	return file_pkg_lvmd_proto_lvmd_proto_rawDescGZIP(), []int{4}
}

func (x *RemoveLVRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RemoveLVRequest) GetDeviceClass() string {
	if x != nil {
		return x.DeviceClass
	}
	return ""
}

type CreateLVSnapshotRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"` // The logical volume name.
	Tags          []string               `protobuf:"bytes,2,rep,name=tags,proto3" json:"tags,omitempty"` // Tags to add to the volume during creation
	DeviceClass   string                 `protobuf:"bytes,3,opt,name=device_class,json=deviceClass,proto3" json:"device_class,omitempty"`
	SourceVolume  string                 `protobuf:"bytes,4,opt,name=source_volume,json=sourceVolume,proto3" json:"source_volume,omitempty"` // Source lv of snapshot.
	AccessType    string                 `protobuf:"bytes,6,opt,name=access_type,json=accessType,proto3" json:"access_type,omitempty"`       // Access type of snapshot
	SizeBytes     int64                  `protobuf:"varint,7,opt,name=size_bytes,json=sizeBytes,proto3" json:"size_bytes,omitempty"`         // Volume size in canonical CSI bytes.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateLVSnapshotRequest) Reset() {
	*x = CreateLVSnapshotRequest{}
	mi := &file_pkg_lvmd_proto_lvmd_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateLVSnapshotRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLVSnapshotRequest) ProtoMessage() {}

func (x *CreateLVSnapshotRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_lvmd_proto_lvmd_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLVSnapshotRequest.ProtoReflect.Descriptor instead.
func (*CreateLVSnapshotRequest) Descriptor() ([]byte, []int) {
	return file_pkg_lvmd_proto_lvmd_proto_rawDescGZIP(), []int{5}
}

func (x *CreateLVSnapshotRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateLVSnapshotRequest) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *CreateLVSnapshotRequest) GetDeviceClass() string {
	if x != nil {
		return x.DeviceClass
	}
	return ""
}

func (x *CreateLVSnapshotRequest) GetSourceVolume() string {
	if x != nil {
		return x.SourceVolume
	}
	return ""
}

func (x *CreateLVSnapshotRequest) GetAccessType() string {
	if x != nil {
		return x.AccessType
	}
	return ""
}

func (x *CreateLVSnapshotRequest) GetSizeBytes() int64 {
	if x != nil {
		return x.SizeBytes
	}
	return 0
}

type CreateLVSnapshotResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Snapshot      *LogicalVolume         `protobuf:"bytes,1,opt,name=snapshot,proto3" json:"snapshot,omitempty"` // Information of the created snapshot lv.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateLVSnapshotResponse) Reset() {
	*x = CreateLVSnapshotResponse{}
	mi := &file_pkg_lvmd_proto_lvmd_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateLVSnapshotResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLVSnapshotResponse) ProtoMessage() {}

func (x *CreateLVSnapshotResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_lvmd_proto_lvmd_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLVSnapshotResponse.ProtoReflect.Descriptor instead.
func (*CreateLVSnapshotResponse) Descriptor() ([]byte, []int) {
	return file_pkg_lvmd_proto_lvmd_proto_rawDescGZIP(), []int{6}
}

func (x *CreateLVSnapshotResponse) GetSnapshot() *LogicalVolume {
	if x != nil {
		return x.Snapshot
	}
	return nil
}

// Represents the input for ResizeLV.
//
// The volume must already exist.
// The volume size will be expanded to at least "size_bytes".
type ResizeLVRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                             // The logical volume name.
	SizeBytes     int64                  `protobuf:"varint,7,opt,name=size_bytes,json=sizeBytes,proto3" json:"size_bytes,omitempty"` // Volume size in canonical CSI bytes.
	DeviceClass   string                 `protobuf:"bytes,3,opt,name=device_class,json=deviceClass,proto3" json:"device_class,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResizeLVRequest) Reset() {
	*x = ResizeLVRequest{}
	mi := &file_pkg_lvmd_proto_lvmd_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResizeLVRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResizeLVRequest) ProtoMessage() {}

func (x *ResizeLVRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_lvmd_proto_lvmd_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResizeLVRequest.ProtoReflect.Descriptor instead.
func (*ResizeLVRequest) Descriptor() ([]byte, []int) {
	return file_pkg_lvmd_proto_lvmd_proto_rawDescGZIP(), []int{7}
}

func (x *ResizeLVRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ResizeLVRequest) GetSizeBytes() int64 {
	if x != nil {
		return x.SizeBytes
	}
	return 0
}

func (x *ResizeLVRequest) GetDeviceClass() string {
	if x != nil {
		return x.DeviceClass
	}
	return ""
}

type ResizeLVResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SizeBytes     int64                  `protobuf:"varint,1,opt,name=size_bytes,json=sizeBytes,proto3" json:"size_bytes,omitempty"` // Volume size in canonical CSI bytes.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResizeLVResponse) Reset() {
	*x = ResizeLVResponse{}
	mi := &file_pkg_lvmd_proto_lvmd_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResizeLVResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResizeLVResponse) ProtoMessage() {}

func (x *ResizeLVResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_lvmd_proto_lvmd_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResizeLVResponse.ProtoReflect.Descriptor instead.
func (*ResizeLVResponse) Descriptor() ([]byte, []int) {
	return file_pkg_lvmd_proto_lvmd_proto_rawDescGZIP(), []int{8}
}

func (x *ResizeLVResponse) GetSizeBytes() int64 {
	if x != nil {
		return x.SizeBytes
	}
	return 0
}

// Represents the response of GetLVList.
type GetLVListResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Volumes       []*LogicalVolume       `protobuf:"bytes,1,rep,name=volumes,proto3" json:"volumes,omitempty"` // Information of volumes.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLVListResponse) Reset() {
	*x = GetLVListResponse{}
	mi := &file_pkg_lvmd_proto_lvmd_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLVListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLVListResponse) ProtoMessage() {}

func (x *GetLVListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_lvmd_proto_lvmd_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLVListResponse.ProtoReflect.Descriptor instead.
func (*GetLVListResponse) Descriptor() ([]byte, []int) {
	return file_pkg_lvmd_proto_lvmd_proto_rawDescGZIP(), []int{9}
}

func (x *GetLVListResponse) GetVolumes() []*LogicalVolume {
	if x != nil {
		return x.Volumes
	}
	return nil
}

// Represents the response of GetFreeBytes.
type GetFreeBytesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FreeBytes     uint64                 `protobuf:"varint,1,opt,name=free_bytes,json=freeBytes,proto3" json:"free_bytes,omitempty"` // Free space of the volume group in bytes.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFreeBytesResponse) Reset() {
	*x = GetFreeBytesResponse{}
	mi := &file_pkg_lvmd_proto_lvmd_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFreeBytesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFreeBytesResponse) ProtoMessage() {}

func (x *GetFreeBytesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_lvmd_proto_lvmd_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFreeBytesResponse.ProtoReflect.Descriptor instead.
func (*GetFreeBytesResponse) Descriptor() ([]byte, []int) {
	return file_pkg_lvmd_proto_lvmd_proto_rawDescGZIP(), []int{10}
}

func (x *GetFreeBytesResponse) GetFreeBytes() uint64 {
	if x != nil {
		return x.FreeBytes
	}
	return 0
}

type GetLVListRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DeviceClass   string                 `protobuf:"bytes,1,opt,name=device_class,json=deviceClass,proto3" json:"device_class,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLVListRequest) Reset() {
	*x = GetLVListRequest{}
	mi := &file_pkg_lvmd_proto_lvmd_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLVListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLVListRequest) ProtoMessage() {}

func (x *GetLVListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_lvmd_proto_lvmd_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLVListRequest.ProtoReflect.Descriptor instead.
func (*GetLVListRequest) Descriptor() ([]byte, []int) {
	return file_pkg_lvmd_proto_lvmd_proto_rawDescGZIP(), []int{11}
}

func (x *GetLVListRequest) GetDeviceClass() string {
	if x != nil {
		return x.DeviceClass
	}
	return ""
}

type GetFreeBytesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DeviceClass   string                 `protobuf:"bytes,1,opt,name=device_class,json=deviceClass,proto3" json:"device_class,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFreeBytesRequest) Reset() {
	*x = GetFreeBytesRequest{}
	mi := &file_pkg_lvmd_proto_lvmd_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFreeBytesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFreeBytesRequest) ProtoMessage() {}

func (x *GetFreeBytesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_lvmd_proto_lvmd_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFreeBytesRequest.ProtoReflect.Descriptor instead.
func (*GetFreeBytesRequest) Descriptor() ([]byte, []int) {
	return file_pkg_lvmd_proto_lvmd_proto_rawDescGZIP(), []int{12}
}

func (x *GetFreeBytesRequest) GetDeviceClass() string {
	if x != nil {
		return x.DeviceClass
	}
	return ""
}

// Represents the stream output from Watch.
type WatchResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FreeBytes     uint64                 `protobuf:"varint,1,opt,name=free_bytes,json=freeBytes,proto3" json:"free_bytes,omitempty"` // Free space of the default volume group in bytes. In the case of thin pools, free space on the thinpool with overprovision in bytes.
	Items         []*WatchItem           `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WatchResponse) Reset() {
	*x = WatchResponse{}
	mi := &file_pkg_lvmd_proto_lvmd_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WatchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchResponse) ProtoMessage() {}

func (x *WatchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_lvmd_proto_lvmd_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchResponse.ProtoReflect.Descriptor instead.
func (*WatchResponse) Descriptor() ([]byte, []int) {
	return file_pkg_lvmd_proto_lvmd_proto_rawDescGZIP(), []int{13}
}

func (x *WatchResponse) GetFreeBytes() uint64 {
	if x != nil {
		return x.FreeBytes
	}
	return 0
}

func (x *WatchResponse) GetItems() []*WatchItem {
	if x != nil {
		return x.Items
	}
	return nil
}

// Represents the details of thinpool.
type ThinPoolItem struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	DataPercent        float64                `protobuf:"fixed64,1,opt,name=data_percent,json=dataPercent,proto3" json:"data_percent,omitempty"`                     // Data percent occupied on the thinpool, used for monitoring.
	MetadataPercent    float64                `protobuf:"fixed64,2,opt,name=metadata_percent,json=metadataPercent,proto3" json:"metadata_percent,omitempty"`         // Metadata percent occupied on the thinpool, used for monitoring.
	OverprovisionBytes uint64                 `protobuf:"varint,3,opt,name=overprovision_bytes,json=overprovisionBytes,proto3" json:"overprovision_bytes,omitempty"` // Free space on the thinpool with overprovision, used for annotating node.
	SizeBytes          uint64                 `protobuf:"varint,4,opt,name=size_bytes,json=sizeBytes,proto3" json:"size_bytes,omitempty"`                            // Physical data space size of the thinpool.
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ThinPoolItem) Reset() {
	*x = ThinPoolItem{}
	mi := &file_pkg_lvmd_proto_lvmd_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ThinPoolItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThinPoolItem) ProtoMessage() {}

func (x *ThinPoolItem) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_lvmd_proto_lvmd_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThinPoolItem.ProtoReflect.Descriptor instead.
func (*ThinPoolItem) Descriptor() ([]byte, []int) {
	return file_pkg_lvmd_proto_lvmd_proto_rawDescGZIP(), []int{14}
}

func (x *ThinPoolItem) GetDataPercent() float64 {
	if x != nil {
		return x.DataPercent
	}
	return 0
}

func (x *ThinPoolItem) GetMetadataPercent() float64 {
	if x != nil {
		return x.MetadataPercent
	}
	return 0
}

func (x *ThinPoolItem) GetOverprovisionBytes() uint64 {
	if x != nil {
		return x.OverprovisionBytes
	}
	return 0
}

func (x *ThinPoolItem) GetSizeBytes() uint64 {
	if x != nil {
		return x.SizeBytes
	}
	return 0
}

// Represents the response corresponding to device class targets.
type WatchItem struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FreeBytes     uint64                 `protobuf:"varint,1,opt,name=free_bytes,json=freeBytes,proto3" json:"free_bytes,omitempty"` // Free space in the volume group in bytes.
	DeviceClass   string                 `protobuf:"bytes,2,opt,name=device_class,json=deviceClass,proto3" json:"device_class,omitempty"`
	SizeBytes     uint64                 `protobuf:"varint,3,opt,name=size_bytes,json=sizeBytes,proto3" json:"size_bytes,omitempty"` // Size of volume group in bytes.
	ThinPool      *ThinPoolItem          `protobuf:"bytes,4,opt,name=thin_pool,json=thinPool,proto3" json:"thin_pool,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WatchItem) Reset() {
	*x = WatchItem{}
	mi := &file_pkg_lvmd_proto_lvmd_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WatchItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchItem) ProtoMessage() {}

func (x *WatchItem) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_lvmd_proto_lvmd_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchItem.ProtoReflect.Descriptor instead.
func (*WatchItem) Descriptor() ([]byte, []int) {
	return file_pkg_lvmd_proto_lvmd_proto_rawDescGZIP(), []int{15}
}

func (x *WatchItem) GetFreeBytes() uint64 {
	if x != nil {
		return x.FreeBytes
	}
	return 0
}

func (x *WatchItem) GetDeviceClass() string {
	if x != nil {
		return x.DeviceClass
	}
	return ""
}

func (x *WatchItem) GetSizeBytes() uint64 {
	if x != nil {
		return x.SizeBytes
	}
	return 0
}

func (x *WatchItem) GetThinPool() *ThinPoolItem {
	if x != nil {
		return x.ThinPool
	}
	return nil
}

var File_pkg_lvmd_proto_lvmd_proto protoreflect.FileDescriptor

const file_pkg_lvmd_proto_lvmd_proto_rawDesc = "" +
	"\n" +
	"\x19pkg/lvmd/proto/lvmd.proto\x12\x05proto\"\a\n" +
	"\x05Empty\"\xbe\x01\n" +
	"\rLogicalVolume\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1b\n" +
	"\tdev_major\x18\x03 \x01(\rR\bdevMajor\x12\x1b\n" +
	"\tdev_minor\x18\x04 \x01(\rR\bdevMinor\x12\x12\n" +
	"\x04tags\x18\x05 \x03(\tR\x04tags\x12\x1d\n" +
	"\n" +
	"size_bytes\x18\x06 \x01(\x03R\tsizeBytes\x12\x12\n" +
	"\x04path\x18\a \x01(\tR\x04path\x12\x12\n" +
	"\x04attr\x18\b \x01(\tR\x04attrJ\x04\b\x02\x10\x03\"\xb5\x01\n" +
	"\x0fCreateLVRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04tags\x18\x03 \x03(\tR\x04tags\x12!\n" +
	"\fdevice_class\x18\x04 \x01(\tR\vdeviceClass\x122\n" +
	"\x15lvcreate_option_class\x18\x05 \x01(\tR\x13lvcreateOptionClass\x12\x1d\n" +
	"\n" +
	"size_bytes\x18\x06 \x01(\x03R\tsizeBytesJ\x04\b\x02\x10\x03\"@\n" +
	"\x10CreateLVResponse\x12,\n" +
	"\x06volume\x18\x01 \x01(\v2\x14.proto.LogicalVolumeR\x06volume\"H\n" +
	"\x0fRemoveLVRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12!\n" +
	"\fdevice_class\x18\x02 \x01(\tR\vdeviceClass\"\xcf\x01\n" +
	"\x17CreateLVSnapshotRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04tags\x18\x02 \x03(\tR\x04tags\x12!\n" +
	"\fdevice_class\x18\x03 \x01(\tR\vdeviceClass\x12#\n" +
	"\rsource_volume\x18\x04 \x01(\tR\fsourceVolume\x12\x1f\n" +
	"\vaccess_type\x18\x06 \x01(\tR\n" +
	"accessType\x12\x1d\n" +
	"\n" +
	"size_bytes\x18\a \x01(\x03R\tsizeBytesJ\x04\b\x05\x10\x06\"L\n" +
	"\x18CreateLVSnapshotResponse\x120\n" +
	"\bsnapshot\x18\x01 \x01(\v2\x14.proto.LogicalVolumeR\bsnapshot\"m\n" +
	"\x0fResizeLVRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1d\n" +
	"\n" +
	"size_bytes\x18\a \x01(\x03R\tsizeBytes\x12!\n" +
	"\fdevice_class\x18\x03 \x01(\tR\vdeviceClassJ\x04\b\x02\x10\x03\"1\n" +
	"\x10ResizeLVResponse\x12\x1d\n" +
	"\n" +
	"size_bytes\x18\x01 \x01(\x03R\tsizeBytes\"C\n" +
	"\x11GetLVListResponse\x12.\n" +
	"\avolumes\x18\x01 \x03(\v2\x14.proto.LogicalVolumeR\avolumes\"5\n" +
	"\x14GetFreeBytesResponse\x12\x1d\n" +
	"\n" +
	"free_bytes\x18\x01 \x01(\x04R\tfreeBytes\"5\n" +
	"\x10GetLVListRequest\x12!\n" +
	"\fdevice_class\x18\x01 \x01(\tR\vdeviceClass\"8\n" +
	"\x13GetFreeBytesRequest\x12!\n" +
	"\fdevice_class\x18\x01 \x01(\tR\vdeviceClass\"V\n" +
	"\rWatchResponse\x12\x1d\n" +
	"\n" +
	"free_bytes\x18\x01 \x01(\x04R\tfreeBytes\x12&\n" +
	"\x05items\x18\x02 \x03(\v2\x10.proto.WatchItemR\x05items\"\xac\x01\n" +
	"\fThinPoolItem\x12!\n" +
	"\fdata_percent\x18\x01 \x01(\x01R\vdataPercent\x12)\n" +
	"\x10metadata_percent\x18\x02 \x01(\x01R\x0fmetadataPercent\x12/\n" +
	"\x13overprovision_bytes\x18\x03 \x01(\x04R\x12overprovisionBytes\x12\x1d\n" +
	"\n" +
	"size_bytes\x18\x04 \x01(\x04R\tsizeBytes\"\x9e\x01\n" +
	"\tWatchItem\x12\x1d\n" +
	"\n" +
	"free_bytes\x18\x01 \x01(\x04R\tfreeBytes\x12!\n" +
	"\fdevice_class\x18\x02 \x01(\tR\vdeviceClass\x12\x1d\n" +
	"\n" +
	"size_bytes\x18\x03 \x01(\x04R\tsizeBytes\x120\n" +
	"\tthin_pool\x18\x04 \x01(\v2\x13.proto.ThinPoolItemR\bthinPool2\x8c\x02\n" +
	"\tLVService\x12;\n" +
	"\bCreateLV\x12\x16.proto.CreateLVRequest\x1a\x17.proto.CreateLVResponse\x120\n" +
	"\bRemoveLV\x12\x16.proto.RemoveLVRequest\x1a\f.proto.Empty\x12;\n" +
	"\bResizeLV\x12\x16.proto.ResizeLVRequest\x1a\x17.proto.ResizeLVResponse\x12S\n" +
	"\x10CreateLVSnapshot\x12\x1e.proto.CreateLVSnapshotRequest\x1a\x1f.proto.CreateLVSnapshotResponse2\xc3\x01\n" +
	"\tVGService\x12>\n" +
	"\tGetLVList\x12\x17.proto.GetLVListRequest\x1a\x18.proto.GetLVListResponse\x12G\n" +
	"\fGetFreeBytes\x12\x1a.proto.GetFreeBytesRequest\x1a\x1b.proto.GetFreeBytesResponse\x12-\n" +
	"\x05Watch\x12\f.proto.Empty\x1a\x14.proto.WatchResponse0\x01B+Z)github.com/topolvm/topolvm/pkg/lvmd/protob\x06proto3"

var (
	file_pkg_lvmd_proto_lvmd_proto_rawDescOnce sync.Once
	file_pkg_lvmd_proto_lvmd_proto_rawDescData []byte
)

func file_pkg_lvmd_proto_lvmd_proto_rawDescGZIP() []byte {
	file_pkg_lvmd_proto_lvmd_proto_rawDescOnce.Do(func() {
		file_pkg_lvmd_proto_lvmd_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pkg_lvmd_proto_lvmd_proto_rawDesc), len(file_pkg_lvmd_proto_lvmd_proto_rawDesc)))
	})
	return file_pkg_lvmd_proto_lvmd_proto_rawDescData
}

var file_pkg_lvmd_proto_lvmd_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_pkg_lvmd_proto_lvmd_proto_goTypes = []any{
	(*Empty)(nil),                    // 0: proto.Empty
	(*LogicalVolume)(nil),            // 1: proto.LogicalVolume
	(*CreateLVRequest)(nil),          // 2: proto.CreateLVRequest
	(*CreateLVResponse)(nil),         // 3: proto.CreateLVResponse
	(*RemoveLVRequest)(nil),          // 4: proto.RemoveLVRequest
	(*CreateLVSnapshotRequest)(nil),  // 5: proto.CreateLVSnapshotRequest
	(*CreateLVSnapshotResponse)(nil), // 6: proto.CreateLVSnapshotResponse
	(*ResizeLVRequest)(nil),          // 7: proto.ResizeLVRequest
	(*ResizeLVResponse)(nil),         // 8: proto.ResizeLVResponse
	(*GetLVListResponse)(nil),        // 9: proto.GetLVListResponse
	(*GetFreeBytesResponse)(nil),     // 10: proto.GetFreeBytesResponse
	(*GetLVListRequest)(nil),         // 11: proto.GetLVListRequest
	(*GetFreeBytesRequest)(nil),      // 12: proto.GetFreeBytesRequest
	(*WatchResponse)(nil),            // 13: proto.WatchResponse
	(*ThinPoolItem)(nil),             // 14: proto.ThinPoolItem
	(*WatchItem)(nil),                // 15: proto.WatchItem
}
var file_pkg_lvmd_proto_lvmd_proto_depIdxs = []int32{
	1,  // 0: proto.CreateLVResponse.volume:type_name -> proto.LogicalVolume
	1,  // 1: proto.CreateLVSnapshotResponse.snapshot:type_name -> proto.LogicalVolume
	1,  // 2: proto.GetLVListResponse.volumes:type_name -> proto.LogicalVolume
	15, // 3: proto.WatchResponse.items:type_name -> proto.WatchItem
	14, // 4: proto.WatchItem.thin_pool:type_name -> proto.ThinPoolItem
	2,  // 5: proto.LVService.CreateLV:input_type -> proto.CreateLVRequest
	4,  // 6: proto.LVService.RemoveLV:input_type -> proto.RemoveLVRequest
	7,  // 7: proto.LVService.ResizeLV:input_type -> proto.ResizeLVRequest
	5,  // 8: proto.LVService.CreateLVSnapshot:input_type -> proto.CreateLVSnapshotRequest
	11, // 9: proto.VGService.GetLVList:input_type -> proto.GetLVListRequest
	12, // 10: proto.VGService.GetFreeBytes:input_type -> proto.GetFreeBytesRequest
	0,  // 11: proto.VGService.Watch:input_type -> proto.Empty
	3,  // 12: proto.LVService.CreateLV:output_type -> proto.CreateLVResponse
	0,  // 13: proto.LVService.RemoveLV:output_type -> proto.Empty
	8,  // 14: proto.LVService.ResizeLV:output_type -> proto.ResizeLVResponse
	6,  // 15: proto.LVService.CreateLVSnapshot:output_type -> proto.CreateLVSnapshotResponse
	9,  // 16: proto.VGService.GetLVList:output_type -> proto.GetLVListResponse
	10, // 17: proto.VGService.GetFreeBytes:output_type -> proto.GetFreeBytesResponse
	13, // 18: proto.VGService.Watch:output_type -> proto.WatchResponse
	12, // [12:19] is the sub-list for method output_type
	5,  // [5:12] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_pkg_lvmd_proto_lvmd_proto_init() }
func file_pkg_lvmd_proto_lvmd_proto_init() {
	if File_pkg_lvmd_proto_lvmd_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_lvmd_proto_lvmd_proto_rawDesc), len(file_pkg_lvmd_proto_lvmd_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_pkg_lvmd_proto_lvmd_proto_goTypes,
		DependencyIndexes: file_pkg_lvmd_proto_lvmd_proto_depIdxs,
		MessageInfos:      file_pkg_lvmd_proto_lvmd_proto_msgTypes,
	}.Build()
	File_pkg_lvmd_proto_lvmd_proto = out.File
	file_pkg_lvmd_proto_lvmd_proto_goTypes = nil
	file_pkg_lvmd_proto_lvmd_proto_depIdxs = nil
}
